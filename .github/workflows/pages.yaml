name: Pages Deploy

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    if:
      github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_sha  ==
      github.sha
    steps:
      - name: Checkout code at tag
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: "docs/requirements.txt"

      - name: Install dependencies
        run: pip install -r docs/requirements.txt

      - name: Build MkDocs site
        run: mkdocs build --strict

      - name: Download Helm index from release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract the tag name from the workflow run
          # The workflow_run was triggered by a release, so we need to find the associated tag
          TAG_NAME="${{ github.event.workflow_run.head_branch }}"
          
          echo "Found tag: ${TAG_NAME}"
          
          # Create charts directory in site
          mkdir -p site/charts
          
          # Download the index.yaml from the release
          
          gh release download "${TAG_NAME}" --pattern "index.yaml" --dir site/charts
          if [[ ! -f site/charts/index.yaml ]]; then
            echo "Helm index.yaml found in release ${TAG_NAME}"
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

  publish-pages:
    name: Publish Documentation to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
